/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package my.HMM_Model;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.*;




/**
 *
 * @author anu
 */
public class HMM_ModelUI extends javax.swing.JFrame {

    //** Global Variables
    
    // Jamie:
    // Global search variables:
    String booleanSearchMode = "AND"; // preset starting value as AND
    
    // ** Global Database Variables
    String ip;
    String passStr;
    DBConnect connect;
    String db;
    String user;
    String dbport;
    String ConnectionName;
    ArrayList taxonomyFields;
    //JLabel jLabel_ConnectionStatus;
    
    
    /**
     * Creates new form HMM_ModelUI
     */
    public HMM_ModelUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jMenu1 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        Home = new javax.swing.JPanel();
        Container_Title = new javax.swing.JPanel();
        jLabel_Title = new javax.swing.JLabel();
        jLabel1_Subtitle = new javax.swing.JLabel();
        jLabel_Name1 = new javax.swing.JLabel();
        jLabel_Name2 = new javax.swing.JLabel();
        jLabel_Name3 = new javax.swing.JLabel();
        jLabel_GuttmanLab = new javax.swing.JLabel();
        jLabel_CSBDept = new javax.swing.JLabel();
        jLabel_UniversityOfToronto = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        ConnectToDB = new javax.swing.JPanel();
        Container_SelectDB = new javax.swing.JPanel();
        jLabel_ConnectionName = new javax.swing.JLabel();
        portnumber = new javax.swing.JTextField();
        jLabel_UserName = new javax.swing.JLabel();
        UserName = new javax.swing.JTextField();
        jLabel_Password = new javax.swing.JLabel();
        Password = new javax.swing.JPasswordField();
        jButton_TestConnection = new javax.swing.JButton();
        jLabel_ConnectionStatus = new javax.swing.JLabel();
        jButton_ConnectToDB = new javax.swing.JButton();
        jLabel_ConnectToDBStatus = new javax.swing.JLabel();
        jLabel_RecentDBs = new javax.swing.JLabel();
        jComboBox_RecentDBList = new javax.swing.JComboBox();
        jButton_ClearRecentDBList = new javax.swing.JButton();
        jLabel_Database = new javax.swing.JLabel();
        DBName = new javax.swing.JTextField();
        DBConnection = new javax.swing.JTextField();
        jLabel_port = new javax.swing.JLabel();
        IPAddress = new javax.swing.JTextField();
        jLabel_IPAddress2 = new javax.swing.JLabel();
        jLabel_ConnectToDB = new javax.swing.JLabel();
        PipelineConfigScrollPanel = new javax.swing.JScrollPane();
        PipelineConfig = new javax.swing.JPanel();
        Container_Analysis = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        Container_Sequence = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel26 = new javax.swing.JLabel();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        Container_SequenceDirectory = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jButton22 = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jButton25 = new javax.swing.JButton();
        jTextField24 = new javax.swing.JTextField();
        Container_Group = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jLabel32 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jButton28 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        jButton34 = new javax.swing.JButton();
        Container_Database = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jButton35 = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jButton36 = new javax.swing.JButton();
        Container_CoreGenome = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        jTextField3 = new javax.swing.JTextField();
        Container_HMMERParameters = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        jTextField20 = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        jTextField21 = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        jTextField22 = new javax.swing.JTextField();
        jTextField23 = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        Container_Reference = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jComboBox9 = new javax.swing.JComboBox();
        Container_ResultParsingParameters = new javax.swing.JPanel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jComboBox10 = new javax.swing.JComboBox();
        jLabel55 = new javax.swing.JLabel();
        jSlider11 = new javax.swing.JSlider();
        jSlider12 = new javax.swing.JSlider();
        jSlider13 = new javax.swing.JSlider();
        jSlider14 = new javax.swing.JSlider();
        jSlider15 = new javax.swing.JSlider();
        jSlider16 = new javax.swing.JSlider();
        jSlider17 = new javax.swing.JSlider();
        jSlider18 = new javax.swing.JSlider();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        jTextField18 = new javax.swing.JTextField();
        jTextField19 = new javax.swing.JTextField();
        jTextField31 = new javax.swing.JTextField();
        jTextField32 = new javax.swing.JTextField();
        jTextField33 = new javax.swing.JTextField();
        jTextField34 = new javax.swing.JTextField();
        jTextField35 = new javax.swing.JTextField();
        jLabel61 = new javax.swing.JLabel();
        jTextField36 = new javax.swing.JTextField();
        jSlider19 = new javax.swing.JSlider();
        jSlider20 = new javax.swing.JSlider();
        jLabel_PipelineConfig = new javax.swing.JLabel();
        Container_SaveLoadRun = new javax.swing.JPanel();
        jButton_SaveSettings = new javax.swing.JButton();
        jButton_LoadSettings = new javax.swing.JButton();
        jButton_DefaultSettings = new javax.swing.JButton();
        jButton_RunPipeline = new javax.swing.JButton();
        QueryBuilder = new javax.swing.JPanel();
        jPanel_BuildQueryGroup = new javax.swing.JPanel();
        jButton_MakeQueryGroup = new javax.swing.JButton();
        jScrollPane_SearchFieldsScrollPanel = new javax.swing.JScrollPane();
        jTree_SearchFields = new javax.swing.JTree();
        jLabel3 = new javax.swing.JLabel();
        jPanel_ManageQueryGroups = new javax.swing.JPanel();
        jScrollPanel_DisplayQueryGroups = new javax.swing.JScrollPane();
        jList_DisplayQueryGroups = new javax.swing.JList();
        jButton_SaveGroup = new javax.swing.JButton();
        jButton_LoadGroup = new javax.swing.JButton();
        jButton_ClearGroup = new javax.swing.JButton();
        jButton_EditGroup = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        SearchScrollPanel = new javax.swing.JScrollPane();
        Search = new javax.swing.JPanel();
        jLabel_Search = new javax.swing.JLabel();
        Container_BooleanSearch = new javax.swing.JPanel();
        jLabel_A = new javax.swing.JLabel();
        jComboBox_BooleanOperator = new javax.swing.JComboBox();
        jLabel_B = new javax.swing.JLabel();
        jTextArea_SearchBinA = new javax.swing.JTextArea();
        jTextArea_SearchBinB = new javax.swing.JTextArea();
        jButton_ClearBinB = new javax.swing.JButton();
        jButton_ClearBinA = new javax.swing.JButton();
        jButton_BuildSQLquery = new javax.swing.JButton();
        vennDiagram = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Container_Action = new javax.swing.JPanel();
        jButton_NewSearch = new javax.swing.JButton();
        jButton_LoadSearch = new javax.swing.JButton();
        jButton_SaveSearch = new javax.swing.JButton();
        Container_QueryBuilder = new javax.swing.JPanel();
        jButton_SubmitSearch = new javax.swing.JButton();
        jTextField_SQLsearchQuery = new javax.swing.JTextField();
        jLabel_SearchString = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3_QueryGroups = new javax.swing.JPanel();
        jScrollPanel_QueryGroups1 = new javax.swing.JScrollPane();
        jList_QueryGroups1 = new javax.swing.JList();
        jLabel_InstructionsLine3 = new javax.swing.JLabel();
        jLabel_InstructionsLine4 = new javax.swing.JLabel();
        jButton_AssignToBinA1 = new javax.swing.JButton();
        jButton_AssignToBinB1 = new javax.swing.JButton();
        jPanel3_ResultGroups = new javax.swing.JPanel();
        jScrollPanel_QueryGroups3 = new javax.swing.JScrollPane();
        jList_QueryGroups3 = new javax.swing.JList();
        jLabel_InstructionsLine7 = new javax.swing.JLabel();
        jLabel_InstructionsLine8 = new javax.swing.JLabel();
        jButton_AssignToBinA3 = new javax.swing.JButton();
        jButton_AssignResultsToBinB = new javax.swing.JButton();
        Results = new javax.swing.JPanel();
        jLabel_Results = new javax.swing.JLabel();
        jScrollPane_ResultsWindowScrollPanel = new javax.swing.JScrollPane();
        jTable_ResultsWindow = new javax.swing.JTable();
        jButton_SaveResults = new javax.swing.JButton();
        jButton_ClearResults = new javax.swing.JButton();
        ResultsGroup = new javax.swing.JButton();
        Help = new javax.swing.JPanel();
        jLabel_Help = new javax.swing.JLabel();
        jScrollPanel_HelpContentsScrollPanel = new javax.swing.JScrollPane();
        jTextArea_HelpContents = new javax.swing.JTextArea();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(130, 173, 215));
        setMinimumSize(new java.awt.Dimension(1200, 720));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(130, 170, 210));
        jPanel1.setMaximumSize(new java.awt.Dimension(1250, 715));
        jPanel1.setMinimumSize(new java.awt.Dimension(1250, 715));
        jPanel1.setPreferredSize(new java.awt.Dimension(1230, 715));
        jPanel1.setSize(new java.awt.Dimension(1230, 715));

        jTabbedPane1.setBackground(new java.awt.Color(153, 204, 255));
        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.setAlignmentX(0.0F);
        jTabbedPane1.setAlignmentY(0.0F);
        jTabbedPane1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jTabbedPane1.setMaximumSize(new java.awt.Dimension(1200, 700));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(1200, 700));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1200, 700));

        Home.setBackground(new java.awt.Color(153, 204, 255));
        Home.setMaximumSize(new java.awt.Dimension(1200, 700));
        Home.setMinimumSize(new java.awt.Dimension(1200, 700));
        Home.setPreferredSize(new java.awt.Dimension(1200, 700));
        Home.setLayout(new java.awt.GridBagLayout());

        Container_Title.setBackground(new java.awt.Color(223, 222, 222));
        Container_Title.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(115, 155, 194), 5, true));
        Container_Title.setMaximumSize(new java.awt.Dimension(660, 394));
        Container_Title.setLayout(new java.awt.GridBagLayout());

        jLabel_Title.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel_Title.setText("Genome Lunch Box");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 16;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        Container_Title.add(jLabel_Title, gridBagConstraints);

        jLabel1_Subtitle.setText("HMM Pipeline Manager for Pangenome Data Analysis");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(18, 0, 18, 0);
        Container_Title.add(jLabel1_Subtitle, gridBagConstraints);

        jLabel_Name1.setText("Shalabh Thakur");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        Container_Title.add(jLabel_Name1, gridBagConstraints);

        jLabel_Name2.setText("Anu Surendra");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 43;
        gridBagConstraints.gridheight = 5;
        Container_Title.add(jLabel_Name2, gridBagConstraints);

        jLabel_Name3.setText("Jamie Waese");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 48;
        Container_Title.add(jLabel_Name3, gridBagConstraints);

        jLabel_GuttmanLab.setText("David Guttman Lab");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 49;
        gridBagConstraints.insets = new java.awt.Insets(11, 0, 11, 0);
        Container_Title.add(jLabel_GuttmanLab, gridBagConstraints);

        jLabel_CSBDept.setText("Cell & Systems Biology");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 50;
        Container_Title.add(jLabel_CSBDept, gridBagConstraints);

        jLabel_UniversityOfToronto.setText("University of Toronto");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 51;
        Container_Title.add(jLabel_UniversityOfToronto, gridBagConstraints);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/my/HMM_Model/icon.png"))); // NOI18N
        jLabel1.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        Container_Title.add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipady = 50;
        Home.add(Container_Title, gridBagConstraints);

        jTabbedPane1.addTab("Home", Home);

        ConnectToDB.setBackground(new java.awt.Color(153, 204, 255));
        ConnectToDB.setMaximumSize(new java.awt.Dimension(1200, 700));
        ConnectToDB.setMinimumSize(new java.awt.Dimension(1200, 700));
        ConnectToDB.setPreferredSize(new java.awt.Dimension(1200, 700));
        ConnectToDB.setLayout(new java.awt.GridBagLayout());

        Container_SelectDB.setBackground(new java.awt.Color(222, 222, 222));
        Container_SelectDB.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(115, 155, 194), 5, true));
        Container_SelectDB.setAlignmentX(0.0F);
        Container_SelectDB.setAlignmentY(0.0F);
        Container_SelectDB.setLayout(new java.awt.GridBagLayout());

        jLabel_ConnectionName.setText("Connection Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 33;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 6, 0);
        Container_SelectDB.add(jLabel_ConnectionName, gridBagConstraints);
        jLabel_ConnectionName.getAccessibleContext().setAccessibleName("Name of Database Connection");

        portnumber.setText("3306");
        portnumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portnumberActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.insets = new java.awt.Insets(0, 37, 0, 12);
        Container_SelectDB.add(portnumber, gridBagConstraints);

        jLabel_UserName.setText("User Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 31;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 6, 0);
        Container_SelectDB.add(jLabel_UserName, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 85;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 6, 0);
        Container_SelectDB.add(UserName, gridBagConstraints);

        jLabel_Password.setText("Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 40;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 6, 0);
        Container_SelectDB.add(jLabel_Password, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 85;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 6, 0);
        Container_SelectDB.add(Password, gridBagConstraints);

        jButton_TestConnection.setText("Test Connection");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 6, 0);
        Container_SelectDB.add(jButton_TestConnection, gridBagConstraints);

        jLabel_ConnectionStatus.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        jLabel_ConnectionStatus.setText("Status:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 9, 0, 0);
        Container_SelectDB.add(jLabel_ConnectionStatus, gridBagConstraints);

        jButton_ConnectToDB.setText("Connect");
        jButton_ConnectToDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ConnectToDBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 6, 0);
        Container_SelectDB.add(jButton_ConnectToDB, gridBagConstraints);

        jLabel_ConnectToDBStatus.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        jLabel_ConnectToDBStatus.setText("Not Connected");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 7, 0, 0);
        Container_SelectDB.add(jLabel_ConnectToDBStatus, gridBagConstraints);

        jLabel_RecentDBs.setText("Recent DB's");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.ipadx = 54;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 6, 6);
        Container_SelectDB.add(jLabel_RecentDBs, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        Container_SelectDB.add(jComboBox_RecentDBList, gridBagConstraints);

        jButton_ClearRecentDBList.setText("Clear");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        Container_SelectDB.add(jButton_ClearRecentDBList, gridBagConstraints);

        jLabel_Database.setText("Default Schema");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 40;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 6, 0);
        Container_SelectDB.add(jLabel_Database, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 85;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 6, 0);
        Container_SelectDB.add(DBName, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 6, 0);
        Container_SelectDB.add(DBConnection, gridBagConstraints);

        jLabel_port.setText("Port");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        Container_SelectDB.add(jLabel_port, gridBagConstraints);

        IPAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IPAddressActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 85;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 6, 0);
        Container_SelectDB.add(IPAddress, gridBagConstraints);

        jLabel_IPAddress2.setText("IP Address");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 33;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 6, 0);
        Container_SelectDB.add(jLabel_IPAddress2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.ipady = 30;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        ConnectToDB.add(Container_SelectDB, gridBagConstraints);

        jLabel_ConnectToDB.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel_ConnectToDB.setText("Connect to Database");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 10, 0);
        ConnectToDB.add(jLabel_ConnectToDB, gridBagConstraints);

        jTabbedPane1.addTab("Connect to DB", ConnectToDB);

        PipelineConfigScrollPanel.setBackground(new java.awt.Color(153, 204, 255));
        PipelineConfigScrollPanel.setBorder(null);
        PipelineConfigScrollPanel.setHorizontalScrollBar(null);
        PipelineConfigScrollPanel.setMaximumSize(new java.awt.Dimension(1200, 700));
        PipelineConfigScrollPanel.setMinimumSize(new java.awt.Dimension(1200, 700));

        PipelineConfig.setBackground(new java.awt.Color(153, 204, 255));
        PipelineConfig.setMaximumSize(new java.awt.Dimension(1200, 1800));
        PipelineConfig.setMinimumSize(new java.awt.Dimension(1200, 1800));
        PipelineConfig.setPreferredSize(new java.awt.Dimension(1200, 1767));
        PipelineConfig.setVerifyInputWhenFocusTarget(false);
        PipelineConfig.setLayout(new java.awt.GridBagLayout());

        Container_Analysis.setBackground(new java.awt.Color(237, 236, 236));
        Container_Analysis.setBorder(javax.swing.BorderFactory.createTitledBorder("Analysis"));
        Container_Analysis.setToolTipText("Analysis to perform in the pipeline.");
        Container_Analysis.setLayout(new java.awt.GridBagLayout());

        jLabel16.setText("Homolog Scan");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(15, 25, 17, 10);
        Container_Analysis.add(jLabel16, gridBagConstraints);

        jRadioButton1.setText("Yes");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        Container_Analysis.add(jRadioButton1, gridBagConstraints);

        jRadioButton2.setText("No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 25);
        Container_Analysis.add(jRadioButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 300, 10, 300);
        PipelineConfig.add(Container_Analysis, gridBagConstraints);

        Container_Sequence.setBackground(new java.awt.Color(237, 236, 236));
        Container_Sequence.setBorder(javax.swing.BorderFactory.createTitledBorder("Sequence"));
        Container_Sequence.setToolTipText("Analysis to perform in the pipeline.");
        Container_Sequence.setLayout(new java.awt.GridBagLayout());

        jLabel25.setText("Format");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(15, 25, 15, 7);
        Container_Sequence.add(jLabel25, gridBagConstraints);

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "FASTA" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        Container_Sequence.add(jComboBox3, gridBagConstraints);

        jLabel26.setText("Adjust Header");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        Container_Sequence.add(jLabel26, gridBagConstraints);

        jRadioButton3.setText("Yes");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        Container_Sequence.add(jRadioButton3, gridBagConstraints);

        jRadioButton4.setText("No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 25);
        Container_Sequence.add(jRadioButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 300, 10, 300);
        PipelineConfig.add(Container_Sequence, gridBagConstraints);

        Container_SequenceDirectory.setBackground(new java.awt.Color(237, 236, 236));
        Container_SequenceDirectory.setBorder(javax.swing.BorderFactory.createTitledBorder("Sequence Directory"));
        Container_SequenceDirectory.setToolTipText("Analysis to perform in the pipeline.");
        Container_SequenceDirectory.setLayout(new java.awt.GridBagLayout());

        jLabel27.setText("Reference Directory");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(15, 25, 0, 66);
        Container_SequenceDirectory.add(jLabel27, gridBagConstraints);

        jButton22.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 10, 25);
        Container_SequenceDirectory.add(jButton22, gridBagConstraints);

        jLabel28.setText("Query Directory");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 25, 15, 66);
        Container_SequenceDirectory.add(jLabel28, gridBagConstraints);

        jTextField8.setToolTipText("Location to query genome directory.");
        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        Container_SequenceDirectory.add(jTextField8, gridBagConstraints);

        jButton25.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 25);
        Container_SequenceDirectory.add(jButton25, gridBagConstraints);

        jTextField24.setToolTipText("Location to reference genome directory.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.8;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 10, 0);
        Container_SequenceDirectory.add(jTextField24, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 300, 10, 300);
        PipelineConfig.add(Container_SequenceDirectory, gridBagConstraints);

        Container_Group.setBackground(new java.awt.Color(237, 236, 236));
        Container_Group.setBorder(javax.swing.BorderFactory.createTitledBorder("Group"));
        Container_Group.setToolTipText("Analysis to perform in the pipeline.");
        Container_Group.setLayout(new java.awt.GridBagLayout());

        jLabel29.setText("Group File");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 35, 0, 10);
        Container_Group.add(jLabel29, gridBagConstraints);

        jTextField9.setToolTipText("Location to reference genome directory.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        Container_Group.add(jTextField9, gridBagConstraints);

        jLabel30.setText("Group Distance");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 35, 0, 10);
        Container_Group.add(jLabel30, gridBagConstraints);

        jTextField10.setToolTipText("Location to query genome directory.");
        jTextField10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField10ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        Container_Group.add(jTextField10, gridBagConstraints);

        jLabel31.setText("Input Group");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(15, 35, 0, 10);
        Container_Group.add(jLabel31, gridBagConstraints);

        jRadioButton5.setText("No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 0, 0);
        Container_Group.add(jRadioButton5, gridBagConstraints);

        jRadioButton6.setText("Yes");
        jRadioButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 0, 0);
        Container_Group.add(jRadioButton6, gridBagConstraints);

        jLabel32.setText("Group Alignment Directory");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 35, 0, 10);
        Container_Group.add(jLabel32, gridBagConstraints);

        jTextField11.setToolTipText("Location to reference genome directory.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        Container_Group.add(jTextField11, gridBagConstraints);

        jLabel33.setText("Group Model Directory");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 35, 0, 10);
        Container_Group.add(jLabel33, gridBagConstraints);

        jTextField12.setToolTipText("Location to query genome directory.");
        jTextField12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField12ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        Container_Group.add(jTextField12, gridBagConstraints);

        jLabel34.setText("Group Singleton Directory");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 35, 15, 10);
        Container_Group.add(jLabel34, gridBagConstraints);

        jTextField13.setToolTipText("Location to query genome directory.");
        jTextField13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 15, 0);
        Container_Group.add(jTextField13, gridBagConstraints);

        jButton28.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 25);
        Container_Group.add(jButton28, gridBagConstraints);

        jButton29.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 25);
        Container_Group.add(jButton29, gridBagConstraints);

        jButton32.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 25);
        Container_Group.add(jButton32, gridBagConstraints);

        jButton33.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 15, 25);
        Container_Group.add(jButton33, gridBagConstraints);

        jButton34.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 25);
        Container_Group.add(jButton34, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 300, 10, 300);
        PipelineConfig.add(Container_Group, gridBagConstraints);

        Container_Database.setBackground(new java.awt.Color(237, 236, 236));
        Container_Database.setBorder(javax.swing.BorderFactory.createTitledBorder("Database"));
        Container_Database.setToolTipText("Analysis to perform in the pipeline.");
        Container_Database.setLayout(new java.awt.GridBagLayout());

        jLabel35.setText("HMM Database");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(15, 25, 0, 68);
        Container_Database.add(jLabel35, gridBagConstraints);

        jTextField14.setToolTipText("Location to reference genome directory.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.8;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 0, 0);
        Container_Database.add(jTextField14, gridBagConstraints);

        jButton35.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 0, 25);
        Container_Database.add(jButton35, gridBagConstraints);

        jLabel36.setText("Sequence Database");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 25, 15, 68);
        Container_Database.add(jLabel36, gridBagConstraints);

        jTextField15.setToolTipText("Location to query genome directory.");
        jTextField15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField15ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 15, 0);
        Container_Database.add(jTextField15, gridBagConstraints);

        jButton36.setText("Select");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 15, 25);
        Container_Database.add(jButton36, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 300, 10, 300);
        PipelineConfig.add(Container_Database, gridBagConstraints);

        Container_CoreGenome.setBackground(new java.awt.Color(237, 236, 236));
        Container_CoreGenome.setBorder(javax.swing.BorderFactory.createTitledBorder("Core Genome"));
        Container_CoreGenome.setToolTipText("Analysis to perform in the pipeline.");
        Container_CoreGenome.setLayout(new java.awt.GridBagLayout());

        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel38.setText("Accuracy Threshold");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(15, 25, 15, 88);
        Container_CoreGenome.add(jLabel38, gridBagConstraints);

        jSlider1.setMajorTickSpacing(99);
        jSlider1.setMinimum(1);
        jSlider1.setMinorTickSpacing(25);
        jSlider1.setPaintTicks(true);
        jSlider1.setToolTipText("Minimum accuracy threshold for sequence alignment. Default is 90.");
        jSlider1.setValue(90);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weighty = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 25);
        Container_CoreGenome.add(jSlider1, gridBagConstraints);

        jTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField3.setText("90");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        Container_CoreGenome.add(jTextField3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 300, 10, 300);
        PipelineConfig.add(Container_CoreGenome, gridBagConstraints);

        Container_HMMERParameters.setBackground(new java.awt.Color(237, 236, 236));
        Container_HMMERParameters.setBorder(javax.swing.BorderFactory.createTitledBorder("HMMER Parameters"));
        Container_HMMERParameters.setToolTipText("Analysis to perform in the pipeline.");
        Container_HMMERParameters.setLayout(new java.awt.GridBagLayout());

        jLabel41.setText("Sequence E Value");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(12, 25, 0, 13);
        Container_HMMERParameters.add(jLabel41, gridBagConstraints);

        jTextField20.setText("0.00001");
        jTextField20.setToolTipText("E value threshold for complete sequence. ");
        jTextField20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField20ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(12, 0, 0, 25);
        Container_HMMERParameters.add(jTextField20, gridBagConstraints);

        jLabel42.setText("Domain E Value");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 25, 0, 13);
        Container_HMMERParameters.add(jLabel42, gridBagConstraints);

        jTextField21.setToolTipText("E value threshold for domain.");
        jTextField21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField21ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 25);
        Container_HMMERParameters.add(jTextField21, gridBagConstraints);

        jLabel43.setText("Include Sequence E Value");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 25, 0, 13);
        Container_HMMERParameters.add(jLabel43, gridBagConstraints);

        jTextField22.setText("0.00001");
        jTextField22.setToolTipText("E value threshold to include sequence in results.");
        jTextField22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField22ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 25);
        Container_HMMERParameters.add(jTextField22, gridBagConstraints);

        jTextField23.setText("0.00001");
        jTextField23.setToolTipText("E value threshold to include domain in results.");
        jTextField23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField23ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 15, 25);
        Container_HMMERParameters.add(jTextField23, gridBagConstraints);

        jLabel44.setText("Include Domain E Value");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 25, 15, 13);
        Container_HMMERParameters.add(jLabel44, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 300, 10, 300);
        PipelineConfig.add(Container_HMMERParameters, gridBagConstraints);

        Container_Reference.setBackground(new java.awt.Color(237, 236, 236));
        Container_Reference.setBorder(javax.swing.BorderFactory.createTitledBorder("Reference"));
        Container_Reference.setToolTipText("Analysis to perform in the pipeline.");
        Container_Reference.setLayout(new java.awt.GridBagLayout());

        jLabel40.setText("Number of Reference Genomes");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(15, 25, 15, 15);
        Container_Reference.add(jLabel40, gridBagConstraints);

        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5" }));
        jComboBox9.setToolTipText("Number of genomes to be used 